// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Confrence {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  email       String         @unique
  name        String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  Home        Home?
  Navbar      Navbar?
  Participant Participant[]
  EventDates  EventDates[]
  Annoucement Announcement[]
  Images      Images[]
  Sponsors    Sponsors[]
  Awards      Awards[]
  Speakers    Speakers[]
  Committees  Committees[]
  Contact     Contact[]
  Location    Location?
}

model Home {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  confId        String    @unique @db.ObjectId
  conf          Confrence @relation(fields: [confId], references: [id])
  confName      String
  confStartDate DateTime
  confEndDate   DateTime
  logo          String?
  shortName     String?
  aboutConf     String
  aboutIns      String?
  youtubeLink   String?
  instaLink     String?
  facebookLink  String?
  twitterLink   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
}

model EventDates {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  confId    String    @db.ObjectId
  conf      Confrence @relation(fields: [confId], references: [id])
  title     String?
  date      DateTime  @default(now())
  sequence  Int       @default(0)
  extended  Boolean   @default(false)
  newDate   DateTime?
  completed Boolean   @default(false)
  featured  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Announcement {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  confId          String    @db.ObjectId
  conf            Confrence @relation(fields: [confId], references: [id])
  title           String
  metaDescription String?
  description     String
  feature         Boolean   @default(true)
  sequence        Int       @default(0)
  new             Boolean   @default(true)
  hidden          Boolean   @default(false)
  link            String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
}

model Images {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  confId    String    @db.ObjectId
  conf      Confrence @relation(fields: [confId], references: [id])
  name      String?
  imgLink   String
  feature   Boolean   @default(true)
  sequence  Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Sponsors {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  confId    String    @db.ObjectId
  conf      Confrence @relation(fields: [confId], references: [id])
  name      String
  type      String
  logo      String?
  sequence  Int       @default(0)
  featured  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Awards {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  confId      String    @db.ObjectId
  conf        Confrence @relation(fields: [confId], references: [id])
  title1      String
  title2      String?
  description String?
  sequence    Int       @default(0)
  featured    Boolean   @default(true)
  new         Boolean   @default(true)
  hidden      Boolean   @default(false)
  link        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Speakers {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  ConfId      String    @db.ObjectId
  Conf        Confrence @relation(fields: [ConfId], references: [id])
  Name        String
  Designation String
  Institute   String
  ProfileLink String
  ImgLink     String?
  TalkType    String
  TalkTitle   String
  Abstract    String?
  Bio         String?
  sequence    Int       @default(0)
  feature     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Committees {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  ConfId      String    @db.ObjectId
  Conf        Confrence @relation(fields: [ConfId], references: [id])
  Type        String
  Subtype     String?
  Name        String
  Designation String
  Institute   String
  ProfileLink String
  ImgLink     String?
  sequence    Int       @default(0)
  feature     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Contact {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  confId      String    @db.ObjectId
  conf        Confrence @relation(fields: [confId], references: [id])
  title       String
  name        String
  designation String
  imgLink     String?
  institute   String
  profileLink String
  phone       String
  email       String
  fax         String?
  feature     Boolean   @default(true)
  sequence    Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Location {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  confId      String    @unique @db.ObjectId
  conf        Confrence @relation(fields: [confId], references: [id])
  description String
  address     String
  latitude    String
  longitude   String
  feature     Boolean   @default(true)
  sequence    Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Certificate {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ConfId    String   @db.ObjectId
  Title     String
  Type      String
  Desc1     String?
  Desc2     String?
  pdf       Boolean  @default(false)
  img       Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Participant {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  confId            String    @db.ObjectId
  conf              Confrence @relation(fields: [confId], references: [id])
  authorName        String
  authorDesignation String
  authorInstitute   String
  paperTitle        String
  paperId           String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now()) @updatedAt
}

model Navbar {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  confId     String    @unique @db.ObjectId
  conf       Confrence @relation(fields: [confId], references: [id])
  heading    String
  subHeading String
  url        String
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
}

// API Auth
model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  teamId     String   @unique
  teamName   String
  name       String?
  email      String
  token      String   @unique
  accessType String
  disabled   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}
